// Generated by view binder compiler. Do not edit!
package com.project.sparkwomen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.project.sparkwomen.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityContactBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button addContact;

  @NonNull
  public final RelativeLayout bottomLayout;

  @NonNull
  public final TextView callText;

  @NonNull
  public final LinearLayout callingInfo;

  @NonNull
  public final EditText contactGet;

  @NonNull
  public final TextView contactText;

  @NonNull
  public final RecyclerView contacts;

  @NonNull
  public final ImageView editCallButton;

  @NonNull
  public final LinearLayout topBar;

  private ActivityContactBinding(@NonNull RelativeLayout rootView, @NonNull Button addContact,
      @NonNull RelativeLayout bottomLayout, @NonNull TextView callText,
      @NonNull LinearLayout callingInfo, @NonNull EditText contactGet,
      @NonNull TextView contactText, @NonNull RecyclerView contacts,
      @NonNull ImageView editCallButton, @NonNull LinearLayout topBar) {
    this.rootView = rootView;
    this.addContact = addContact;
    this.bottomLayout = bottomLayout;
    this.callText = callText;
    this.callingInfo = callingInfo;
    this.contactGet = contactGet;
    this.contactText = contactText;
    this.contacts = contacts;
    this.editCallButton = editCallButton;
    this.topBar = topBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addContact;
      Button addContact = ViewBindings.findChildViewById(rootView, id);
      if (addContact == null) {
        break missingId;
      }

      id = R.id.bottomLayout;
      RelativeLayout bottomLayout = ViewBindings.findChildViewById(rootView, id);
      if (bottomLayout == null) {
        break missingId;
      }

      id = R.id.callText;
      TextView callText = ViewBindings.findChildViewById(rootView, id);
      if (callText == null) {
        break missingId;
      }

      id = R.id.callingInfo;
      LinearLayout callingInfo = ViewBindings.findChildViewById(rootView, id);
      if (callingInfo == null) {
        break missingId;
      }

      id = R.id.contactGet;
      EditText contactGet = ViewBindings.findChildViewById(rootView, id);
      if (contactGet == null) {
        break missingId;
      }

      id = R.id.contactText;
      TextView contactText = ViewBindings.findChildViewById(rootView, id);
      if (contactText == null) {
        break missingId;
      }

      id = R.id.contacts;
      RecyclerView contacts = ViewBindings.findChildViewById(rootView, id);
      if (contacts == null) {
        break missingId;
      }

      id = R.id.editCallButton;
      ImageView editCallButton = ViewBindings.findChildViewById(rootView, id);
      if (editCallButton == null) {
        break missingId;
      }

      id = R.id.topBar;
      LinearLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      return new ActivityContactBinding((RelativeLayout) rootView, addContact, bottomLayout,
          callText, callingInfo, contactGet, contactText, contacts, editCallButton, topBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
